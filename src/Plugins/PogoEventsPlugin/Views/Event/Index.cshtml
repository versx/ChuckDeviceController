@model List<ActiveEvent>
@{
    ViewData["Title"] = "Pokemon Go Events";
}

<h1>Pokemon Go Events</h1>
<br />

<div class="card text-center">
    <div class="card-header text-center"><b>Overview</b></div>
    <div class="card-body">
        <div class="container">
            <div class="row justify-content-center">
                <div class="col-md-6 p-3">
                    <div class="list-group">
                        <div class="list-group-item">
                            <h3 class="pull-right"><i class="fa-solid fa-globe"></i></h3>
                            <h4 class="list-group-item-heading">Active Events</h4>
                            <p class="list-group-item-text">@Model?.Count(evt => evt.IsActive).ToString("N0")</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-6 p-3">
                    <div class="list-group">
                        <div class="list-group-item">
                            <h3 class="pull-right"><i class="fa-solid fa-clock"></i></h3>
                            <h4 class="list-group-item-heading">Upcoming Events</h4>
                            <p class="list-group-item-text">@Model?.Count(evt => !evt.IsActive).ToString("N0")</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<br>

<table id="table-events" class="table table-striped table-bordered dt-responsive nowrap">
    <thead class="table-dark">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model[0].Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Type)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Start)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].End)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].IsActive)
            </th>
            <th width="5%">Action</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <th scope="row">
                    @Html.DisplayFor(modelItem => item.Name)
                </th>
                <td>
                    @Html.DisplayFor(modelItem => item.Type)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Start)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.End)
                </td>
                <td>
                    @Html.Raw(Utils.FormatBoolean(item.IsActive, html: true))
                </td>
                <td>
                    <div class="dropdown">
                        <button class="btn btn-primary btn-sm dropdown-toggle" type="button" id="dropdownGroup" data-bs-toggle="dropdown" aria-expanded="false">
                            <i class="fa-solid fa-bars"></i>
                        </button>
                        <ul class="dropdown-menu" aria-labelledby="dropdownGroup">
                            <li><a class="dropdown-item" asp-action="Details" asp-route-name="@item.Name"><i class="fa-solid fa-circle-info"></i>&nbsp;Details</a></li>
                            <li><a class="dropdown-item" asp-action="Delete" asp-route-name="@item.Name"><i class="fa-solid fa-trash-can"></i>&nbsp;Delete</a></li>
                        </ul>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>

@section Scripts {
    <script>
        $(document).ready(function() {
            $('#table-events').DataTable({
                columnDefs: [
                    { responsivePriority: 0, targets: 0 },
                    { responsivePriority: 2, targets: 1 },
                    { responsivePriority: 3, targets: 2 },
                    { responsivePriority: 4, targets: 3 },
                    { responsivePriority: 1, targets: -1, orderable: false },
                ],
                order: [[2, 'asc']],
                stateSave: true,
                searching: true,
                paging: true,
                lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, 'All']],
                colReorder: {
                    enable: true,
                    fixedColumnsLeft: 1,
                },
                fixedHeader: {
                    header: true,
                },
                responsive: {
                    //breakpoints: '',
                    details: true,
                },
                info: true,
            });
        });
    </script>
}