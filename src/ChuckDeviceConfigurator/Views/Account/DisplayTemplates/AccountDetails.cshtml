@model Account

<dl class="row">
    <dt class="col-sm-4">
        @Html.DisplayNameFor(model => model.Username)
    </dt>
    <dd class="col-sm-8">
        @Html.DisplayFor(model => model.Username)
    </dd>
    <dt class="col-sm-4">
        @Html.DisplayNameFor(model => model.Password)
    </dt>
    <dd class="col-sm-8">
        @Html.DisplayFor(model => model.Password)
    </dd>
    <dt class="col-sm-4">
        @Html.DisplayNameFor(model => model.Level)
    </dt>
    <dd class="col-sm-8">
        @Html.DisplayFor(model => model.Level)
    </dd>
    <dt class="col-sm-4">
        @Html.DisplayNameFor(model => model.Status)
    </dt>
    <dd class="col-sm-8">
        @Html.Raw(Utils.GetAccountStatusColor(Model?.Status))
    </dd>
    <dt class="col-sm-4">
        @Html.DisplayNameFor(model => model.Spins)
    </dt>
    <dd class="col-sm-8">
        @((Model?.Spins ?? 0).ToString("N0"))
    </dd>
    <dt class="col-sm-4">
        @Html.DisplayNameFor(model => model.Tutorial)
    </dt>
    <dd class="col-sm-8">
        @Utils.FormatBoolean(Model?.Tutorial == 1)
    </dd>
    <dt class="col-sm-4">
        @Html.DisplayNameFor(model => model.GroupName)
    </dt>
    <dd class="col-sm-8">
        @Utils.FormatNull(Model?.GroupName)
    </dd>
    <dt class="col-sm-4">
        @Html.DisplayNameFor(model => model.LastEncounterTime)
    </dt>
    <dd class="col-sm-8">
        @Utils.GetLastUpdatedStatus(Model?.LastEncounterTime ?? 0)
    </dd>
    <dt class="col-sm-4">
        Last Encounter Location
    </dt>
    <dd class="col-sm-8">
        @Html.Raw(Utils.GetGoogleMapsLink(Model?.LastEncounterLatitude ?? 0, Model?.LastEncounterLongitude ?? 0, html: true))
    </dd>
    <dt class="col-sm-4">
        @Html.DisplayNameFor(model => model.LastUsedTimestamp)
    </dt>
    <dd class="col-sm-8">
        @Utils.GetLastUpdatedStatus(Model?.LastUsedTimestamp ?? 0)
    </dd>
    <dt class="col-sm-4">
        @Html.DisplayNameFor(model => model.CreationTimestamp)
    </dt>
    <dd class="col-sm-8">
        @Utils.GetLastUpdatedStatus(Model?.CreationTimestamp ?? 0)
    </dd>
    @if (Model?.Status != "Good")
    {
        <dt class="col-sm-4">
            @Html.DisplayNameFor(model => model.Failed)
        </dt>
        <dd class="col-sm-8">
            @Utils.FormatNull(Model?.Failed)
        </dd>
        <dt class="col-sm-4">
            @Html.DisplayNameFor(model => model.FailedTimestamp)
        </dt>
        <dd class="col-sm-8">
            @Utils.GetLastUpdatedStatus(Model?.FailedTimestamp ?? 0)
        </dd>
        <dt class="col-sm-4">
            @Html.DisplayNameFor(model => model.FirstWarningTimestamp)
        </dt>
        <dd class="col-sm-8">
            @Utils.GetLastUpdatedStatus(Model?.FirstWarningTimestamp ?? 0)
        </dd>
        <dt class="col-sm-4">
            @Html.DisplayNameFor(model => model.Banned)
        </dt>
        <dd class="col-sm-8">
            @Utils.FormatBoolean(Model?.Banned ?? false)
        </dd>
        @if (Model?.Warn ?? false)
        {
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.Warn)
            </dt>
            <dd class="col-sm-8">
                @Html.Raw(Utils.FormatBoolean(!(Model?.Warn ?? false), html: true))
            </dd>
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.WarnExpireTimestamp)
            </dt>
            <dd class="col-sm-8">
                @Utils.GetLastUpdatedStatus(Model?.WarnExpireTimestamp ?? 0)
            </dd>
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.WarnMessageAcknowledged)
            </dt>
            <dd class="col-sm-8">
                @Utils.FormatBoolean(Model?.WarnMessageAcknowledged ?? false)
            </dd>
        }
        @if (Model?.WasSuspended ?? false)
        {
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.WasSuspended)
            </dt>
            <dd class="col-sm-8">
                @Html.Raw(Utils.FormatBoolean(!(Model?.WasSuspended ?? false), html: true))
            </dd>
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.SuspendedMessageAcknowledged)
            </dt>
            <dd class="col-sm-8">
                @Utils.FormatBoolean(Model?.SuspendedMessageAcknowledged ?? false)
            </dd>
        }
    }
</dl>