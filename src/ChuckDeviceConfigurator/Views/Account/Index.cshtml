@model AccountStatisticsViewModel
@{
    ViewData["Title"] = "Accounts";
}

<h1>Accounts</h1>
<br />

<p>
    <a class="btn btn-success btn-sm" asp-action="Add">Import Accounts</a>
</p>

<ul class="nav nav-pills nav-justified mb-3" id="pills-tab" role="tablist">
    <li class="nav-item" role="presentation">
        <a class="nav-link active" id="pills-overview-tab" data-bs-toggle="tab" data-bs-target="#overview" href="#overview" role="tab" aria-controls="pills-overview" aria-selected="true">Overview</a>
    </li>
    <li class="nav-item" role="presentation">
        <a class="nav-link" id="pills-accounts-tab" data-bs-toggle="tab" data-bs-target="#accounts" href="#accounts" role="tab" aria-controls="pills-accounts" aria-selected="false">Accounts</a>
    </li>
</ul>
<div class="tab-content">
    <div class="tab-pane fade show active" id="overview" role="tabpanel" aria-labelledby="pills-overview-tab">
        <div class="card text-center">
            <div class="card-header"><b>Accounts Overview</b></div>
            <div class="card-body">
                <div class="container">
                    <div class="row">
                        <div class="col-md-4 p-1">
                            <div class="list-group">
                                <div class="list-group-item">
                                    <h4 class="list-group-item-heading">@Html.DisplayFor(model => model.TotalAccounts)</h4>
                                    <p class="list-group-item-text">@Html.DisplayNameFor(model => model.TotalAccounts)</p>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4 p-1">
                            <div class="list-group">
                                <div class="list-group-item">
                                    <h4 class="list-group-item-heading">@Html.DisplayFor(model => model.OverLevel30)</h4>
                                    <p class="list-group-item-text">@Html.DisplayNameFor(model => model.OverLevel30)</p>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4 p-1">
                            <div class="list-group">
                                <div class="list-group-item">
                                    <h4 class="list-group-item-heading account-inuse">@Html.DisplayFor(model => model.AccountsInUse)</h4>
                                    <p class="list-group-item-text">@Html.DisplayNameFor(model => model.AccountsInUse)</p>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-4 p-1">
                            <div class="list-group">
                                <div class="list-group-item">
                                    <h4 class="list-group-item-heading account-new">@Html.DisplayFor(model => model.FreshAccounts)</h4>
                                    <p class="list-group-item-text">@Html.DisplayNameFor(model => model.FreshAccounts)</p>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4 p-1">
                            <div class="list-group">
                                <div class="list-group-item">
                                    <h4 class="list-group-item-heading account-good">@Html.DisplayFor(model => model.CleanAccounts)</h4>
                                    <p class="list-group-item-text">@Html.DisplayNameFor(model => model.CleanAccounts)</p>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4 p-1">
                            <div class="list-group">
                                <div class="list-group-item">
                                    <h4 class="list-group-item-heading account-good">@Html.DisplayFor(model => model.CleanLevel30s)</h4>
                                    <p class="list-group-item-text">@Html.DisplayNameFor(model => model.CleanLevel30s)</p>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-4 p-1">
                            <div class="list-group">
                                <div class="list-group-item">
                                    <h4 class="list-group-item-heading account-suspended">@Html.DisplayFor(model => model.SuspendedAccounts)</h4>
                                    <p class="list-group-item-text">@Html.DisplayNameFor(model => model.SuspendedAccounts)</p>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4 p-1">
                            <div class="list-group">
                                <div class="list-group-item">
                                    <h4 class="list-group-item-heading account-cooldown">@Html.DisplayFor(model => model.InCooldown)</h4>
                                    <p class="list-group-item-text">@Html.DisplayNameFor(model => model.InCooldown)</p>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4 p-1">
                            <div class="list-group">
                                <div class="list-group-item">
                                    <h4 class="list-group-item-heading account-spinlimit">@Html.DisplayFor(model => model.OverSpinLimit)</h4>
                                    <p class="list-group-item-text">@Html.DisplayNameFor(model => model.OverSpinLimit)</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <br />

        <div class="card text-center">
            <div class="card-header"><b>Ban Statistics</b></div>
            <div class="card-body">
                <div class="container">
                    <div class="row">
                        <div class="col-md-3 p-1">
                            <div class="list-group">
                                <div class="list-group-item">
                                    <h4 class="list-group-item-heading account-banned">@Html.DisplayFor(model => model.Bans.Last24Hours)</h4>
                                    <p class="list-group-item-text">@Html.DisplayNameFor(model => model.Bans.Last24Hours)</p>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3 p-1">
                            <div class="list-group">
                                <div class="list-group-item">
                                    <h4 class="list-group-item-heading account-banned">@Html.DisplayFor(model => model.Bans.Last7Days)</h4>
                                    <p class="list-group-item-text">@Html.DisplayNameFor(model => model.Bans.Last7Days)</p>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3 p-1">
                            <div class="list-group">
                                <div class="list-group-item">
                                    <h4 class="list-group-item-heading account-banned">@Html.DisplayFor(model => model.Bans.Last30Days)</h4>
                                    <p class="list-group-item-text">@Html.DisplayNameFor(model => model.Bans.Last30Days)</p>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3 p-1">
                            <div class="list-group">
                                <div class="list-group-item">
                                    <h4 class="list-group-item-heading account-banned">@Html.DisplayFor(model => model.Bans.Total)</h4>
                                    <p class="list-group-item-text">@Html.DisplayNameFor(model => model.Bans.Total)</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <br />

        <div class="card text-center">
            <div class="card-header"><b>Warning Statistics</b></div>
            <div class="card-body">
                <div class="container">
                    <div class="row">
                        <div class="col-md-3 p-1">
                            <div class="list-group">
                                <div class="list-group-item">
                                    <h4 class="list-group-item-heading account-warning">@Html.DisplayFor(model => model.Warnings.Last24Hours)</h4>
                                    <p class="list-group-item-text">@Html.DisplayNameFor(model => model.Warnings.Last24Hours)</p>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3 p-1">
                            <div class="list-group">
                                <div class="list-group-item">
                                    <h4 class="list-group-item-heading account-warning">@Html.DisplayFor(model => model.Warnings.Last7Days)</h4>
                                    <p class="list-group-item-text">@Html.DisplayNameFor(model => model.Warnings.Last7Days)</p>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3 p-1">
                            <div class="list-group">
                                <div class="list-group-item">
                                    <h4 class="list-group-item-heading account-warning">@Html.DisplayFor(model => model.Warnings.Last30Days)</h4>
                                    <p class="list-group-item-text">@Html.DisplayNameFor(model => model.Warnings.Last30Days)</p>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3 p-1">
                            <div class="list-group">
                                <div class="list-group-item">
                                    <h4 class="list-group-item-heading account-warning">@Html.DisplayFor(model => model.Warnings.Total)</h4>
                                    <p class="list-group-item-text">@Html.DisplayNameFor(model => model.Warnings.Total)</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <br />

        <table id="table-account-level-stats" class="table table-striped table-bordered dt-responsive nowrap account-level-header">
            <thead class="table-dark">
                <tr>
                    <th class="text-center">
                        @Html.DisplayNameFor(model => model.AccountLevelStatistics[0].Level)
                    </th>
                    <th class="text-center">
                        @Html.DisplayNameFor(model => model.AccountLevelStatistics[0].Total)
                    </th>
                    <th class="text-center">
                        @Html.DisplayNameFor(model => model.AccountLevelStatistics[0].InUse)
                    </th>
                    <th class="text-center">
                        @Html.DisplayNameFor(model => model.AccountLevelStatistics[0].Good)
                    </th>
                    <th class="text-center">
                        @Html.DisplayNameFor(model => model.AccountLevelStatistics[0].Banned)
                    </th>
                    <th class="text-center">
                        @Html.DisplayNameFor(model => model.AccountLevelStatistics[0].Warning)
                    </th>
                    <th class="text-center">
                        @Html.DisplayNameFor(model => model.AccountLevelStatistics[0].Invalid)
                    </th>
                    <th class="text-center">
                        @Html.DisplayNameFor(model => model.AccountLevelStatistics[0].Cooldown)
                    </th>
                    <th class="text-center">
                        @Html.DisplayNameFor(model => model.AccountLevelStatistics[0].SpinLimit)
                    </th>
                    <th class="text-center">
                        @Html.DisplayNameFor(model => model.AccountLevelStatistics[0].Other)
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.AccountLevelStatistics)
                {
                    <tr class="text-center">
                        <th scope="row">
                            @Html.DisplayFor(model => item.Level)
                        </th>
                        <td>
                            <span class="badge bg-primary rounded-pill">@Html.DisplayFor(model => item.Total)</span>
                        </td>
                        <td>
                            <span class="badge bg-success rounded-pill">@Html.DisplayFor(model => item.InUse)</span>
                        </td>
                        <td>
                            <span class="badge bg-success rounded-pill">@Html.DisplayFor(model => item.Good)</span>
                        </td>
                        <td>
                            <span class="badge bg-danger rounded-pill">@Html.DisplayFor(model => item.Banned)</span>
                        </td>
                        <td>
                            <span class="badge bg-warning rounded-pill">@Html.DisplayFor(model => item.Warning)</span>
                        </td>
                        <td>
                            <span class="badge bg-warning rounded-pill">@Html.DisplayFor(model => item.Invalid)</span>
                        </td>
                        <td>
                            <span class="badge bg-warning rounded-pill">@Html.DisplayFor(model => item.Cooldown)</span>
                        </td>
                        <td>
                            <span class="badge bg-warning rounded-pill">@Html.DisplayFor(model => item.SpinLimit)</span>
                        </td>
                        <td>
                            <span class="badge bg-warning rounded-pill">@Html.DisplayFor(model => item.Other)</span>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div class="tab-pane" id="accounts" role="tabpanel" aria-labelledby="pills-accounts-tab">
        <table id="table-accounts" class="table table-striped table-bordered dt-responsive nowrap w-100">
            <thead class="table-dark">
                <tr>
                    <th class="col">
                        @Html.DisplayNameFor(model => model.Accounts[0].Username)
                    </th>
                    <th class="col">
                        @Html.DisplayNameFor(model => model.Accounts[0].Level)
                    </th>
                    <th class="col">
                        @Html.DisplayNameFor(model => model.Accounts[0].Status)
                    </th>
                    <th class="col">
                        @Html.DisplayNameFor(model => model.Accounts[0].IsInUse)
                    </th>
                    <th class="col">
                        @Html.DisplayNameFor(model => model.Accounts[0].Spins)
                    </th>
                    <th class="col">
                        @Html.DisplayNameFor(model => model.Accounts[0].LastEncounter)
                    </th>
                    <th class="col">
                        @Html.DisplayNameFor(model => model.Accounts[0].GroupName)
                    </th>
                    <th width="5%">Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Accounts)
                {
                    <tr>
                        <th scope="row">
                            @Html.DisplayFor(modelItem => item.Username)
                        </th>
                        <td>
                            @Html.DisplayFor(modelItem => item.Level)
                        </td>
                        <td>
                            @Html.Raw(Utils.GetAccountStatusColor(item.Status))
                        </td>
                        <td>
                            @Utils.FormatBoolean(item.IsInUse)
                        </td>
                        <td>
                            @item.Spins.ToString("N0")
                        </td>
                        <td>
                            @Utils.GetLastUpdatedStatus(item.LastEncounterTime ?? 0)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.GroupName)
                        </td>
                        <td>
                            <div class="dropdown">
                                <button class="btn btn-primary btn-sm dropdown-toggle" type="button" id="dropdownGroup" data-bs-toggle="dropdown" aria-expanded="false">
                                    <i class="fa-solid fa-bars"></i>
                                </button>
                                <ul class="dropdown-menu" aria-labelledby="dropdownGroup">
                                    <li><a class="dropdown-item" asp-action="Edit" asp-route-id="@item.Username"><i class="fa-solid fa-pen-to-square"></i>&nbsp;Edit</a></li>
                                    <li><a class="dropdown-item" asp-action="Details" asp-route-id="@item.Username"><i class="fa-solid fa-circle-info"></i>&nbsp;Details</a></li>
                                    <li><a class="dropdown-item" asp-action="Delete" asp-route-id="@item.Username"><i class="fa-solid fa-trash-can"></i>&nbsp;Delete</a></li>
                                </ul>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Credits: https://stackoverflow.com/a/19015027
            // Store the currently selected tab in the hash value
            $('ul.nav-pills > li > a').on('shown.bs.tab', function(e) {
                const id = $(e.target).attr('href').substr(1);
                window.location.hash = id;
            });

            // Upon page load, switch to the currently selected tab
            const hash = window.location.hash;
            $('#pills-tab a[href="' + hash + '"]').tab('show');

            $('#table-account-level-stats').DataTable({
                columnDefs: [
                    { responsivePriority: 0, targets: 0 },
                    { responsivePriority: 1, targets: 1 },
                    { responsivePriority: 5, targets: 2 },
                    { responsivePriority: 2, targets: 3 },
                    { responsivePriority: 3, targets: 4 },
                    { responsivePriority: 4, targets: 5 },
                ],
                order: [[0, 'desc']],
                paging: false,
                colReorder: {
                    enable: true,
                    fixedColumnsLeft: 1,
                },
                responsive: true,
                info: false,
            });

            /* TODO: Look into why accounts table isn't adhering to the prioritized columns and still showing all */
            $('#table-accounts').DataTable({
                columnDefs: [
                    // Username Level Status InUse Spins LastEncounter Group Action
                    // 0        1     2      3     4     5             6     7
                    // 0        2     3      4     5     10            6     1
                    { responsivePriority: 0, targets: 0 },
                    { responsivePriority: 2, targets: 1 },
                    { responsivePriority: 3, targets: 2 },
                    { responsivePriority: 4, targets: 3 },
                    { responsivePriority: 5, targets: 4 },
                    { responsivePriority: 10, targets: 5 },
                    { responsivePriority: 6, targets: 6 },
                    { responsivePriority: 1, targets: -1, orderable: false },
                ],
                order: [[0, 'asc']],
                stateSave: true,
                searching: true,
                paging: true,
                lengthMenu: [[50, 100, 200, 300, -1], [50, 100, 200, 300, 'All']],
                pagingType: 'full_numbers',
                colReorder: false,
                fixedHeader: {
                    header: true,
                },
                responsive: true,
                info: true,
            });
        });

    /*
        $('#table').DataTable({
            colDefs: [
                { orderable: false, targets: -1 },
            ],
            order: [[0, 'desc']],
            stateSave: true,
            //hover
            //searching: false,
            //ordering: true,
            paging: true,
            lengthMenu: [[50, 100, 200, 300, -1], [50, 100, 200, 300, 'All']],
            pageLength: 100,
            //lengthChange: false,
            pagingType: 'full_numbers',
            //numbersLength = 10,
            colReorder: {
                enable: true,
                fixedColumnsLeft: 1,
            },
            fixedColumns: false,
            fixedHeader: {
                header: true,
                footer: false,
            },
            responsive: {
                //breakpoints: '',
                //details: true, // determines whether to show the 'details' + button to expand/show the hidden columns in a panel below the row
            },
            stateRestore: {
                create: true,
                creationModal: true,
                remove: true,
                rename: true,
                save: true,
                saveState: true,
                toggle: true,
            },
            info: true,
        });
    */
    </script>
}