@using ChuckDeviceController.Data
@using ChuckDeviceController.Data.Entities
@using ChuckDeviceConfigurator.ViewModels
@model IvList
@{
    ViewData["Title"] = "Edit IV List " + Model?.Name;
    var pokemonIds = string.Join(Environment.NewLine, Model?.PokemonIds ?? new());
}

<h1>Edit IV List</h1>

<p>@Html.ValidationMessage("IvList", new { @class = "text-danger" })</p>

<br />
<nav style="--bs-breadcrumb-divider: '>';" aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index">Home</a></li>
        <li class="breadcrumb-item"><a asp-controller="IvList" asp-action="Index">IV Lists</a></li>
        <li class="breadcrumb-item active" aria-current="page">Edit IV List</li>
    </ol>
</nav>

<h4>IV List '@(Model?.Name)'</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" readonly />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PokemonIds" class="control-label"></label> (Specify <code>*</code> for all Pokemon)
                <textarea id="PokemonIds" name="PokemonIds" class="form-control" rows="30">@pokemonIds</textarea>
                <span asp-validation-for="PokemonIds" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}