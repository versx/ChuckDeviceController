@model IvList
@{
    ViewData["Title"] = "Create IV List";
}

<h1>@ViewData["Title"]</h1>

<p>@Html.ValidationMessage("IvList", new { @class = "text-danger" })</p>

<br />
@Html.DisplayFor(model => model, "Breadcrumbs", new { Controller = "IvList", ControllerText = "IV Lists", CurrentPage = "Create IV List" })

<form asp-action="Create">
    <div class="pb-4">
        <div class="float-start">
            <h4>IV List</h4>
        </div>
        <div class="float-end">
            <button type="submit" class="btn btn-primary btn-sm">
                <i class="fa-solid fa-floppy-disk"></i>&nbsp;Create
            </button>
        </div>
    </div>
    <hr />
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="form-floating mb-3">
        <input asp-for="Name" class="form-control" placeholder="IV list name" />
        <label asp-for="Name"></label>
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>
    <div class="form-group" hidden>
        <textarea asp-for="PokemonIds" class="form-control" rows="2" placeholder="IV list pokemon IDs"></textarea>
        <label asp-for="PokemonIds"></label>
        <span asp-validation-for="PokemonIds" class="text-danger"></span>
    </div>
    @await Html.PartialAsync("_PokemonSelectorPartial", ViewData["Pokemon"])
</form>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}