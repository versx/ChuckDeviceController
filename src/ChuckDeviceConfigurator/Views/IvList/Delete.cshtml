@using ChuckDeviceConfigurator.Utilities
@using ChuckDeviceController.Data.Entities
@model IvList
@{
    ViewData["Title"] = "Delete IV List " + Model?.Name;
}

<h1>Delete IV List</h1>

<p>@Html.ValidationMessage("IvList", new { @class = "text-danger" })</p>

<br />
<nav style="--bs-breadcrumb-divider: '>';" aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index">Home</a></li>
        <li class="breadcrumb-item"><a asp-controller="IvList" asp-action="Index">IV Lists</a></li>
        <li class="breadcrumb-item active" aria-current="page">Delete IV List</li>
    </ol>
</nav>

<h3>Are you sure you want to delete this IV list?</h3>
<div>
    <h4>IV List '@Model?.Name'</h4>
    <div>
        <form asp-action="Delete">
            <input type="hidden" asp-for="Name" />
            <input type="submit" value="Yes" class="btn btn-danger" />
            <a asp-action="Index" class="btn btn-secondary">No</a>
        </form>
    </div>
</div>

<hr />
<dl class="row">
    <dt class = "col-sm-2">
        @Html.DisplayNameFor(model => model.Name)
    </dt>
    <dd class = "col-sm-10">
        @Html.DisplayFor(model => model.Name)
    </dd>
    <dt class = "col-sm-2">
        @Html.DisplayNameFor(model => model.PokemonIds)
    </dt>
    <dd class = "col-sm-10">
        @if ((Model?.PokemonIds?.Count ?? 0) > 0)
        {
            <ul class="list-group">
                @* TODO: Limit Pokemon ids to 25ish *@
                @foreach (var pokemonId in Model?.PokemonIds ?? new())
                {
                    var icon = Utils.GetPokemonIcon(Convert.ToUInt32(pokemonId), "32", "32", html: true);
                    var id = $"<b>#{pokemonId}</b>";
                    @* TODO: Include Pokemon name *@
                    <li class="list-group-item">@Html.Raw($"{icon}&nbsp;{id}")</li>
                }
            </ul>
        }
        else
        {
            <p>None</p>
        }
    </dd>
</dl>