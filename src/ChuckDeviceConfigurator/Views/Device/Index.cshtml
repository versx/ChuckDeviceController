@using ChuckDeviceController.Extensions
@model ViewModelsModel<Device>
@{
    ViewData["Title"] = "Devices";
}

<h1>Devices</h1>
<br />

<p>
    <a class="btn btn-success btn-sm" asp-action="Create">Create New</a>
</p>

<table id="table-devices" class="table table-striped table-bordered dt-responsive nowrap">
    <thead class="table-dark">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Items[0].Uuid)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Items[0].InstanceName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Items[0].AccountUsername)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Items[0].LastHost)
            </th>
            <th>
                Last Location
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Items[0].LastSeen)
            </th>
            <th width="5%">Action</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Items)
        {
            <tr>
                <th scope="row">
                    @Utils.GetDeviceStatus(item.LastSeen ?? 0) @Html.DisplayFor(modelItem => item.Uuid)
                </th>
                <td>
                    @Html.DisplayFor(modelItem => item.InstanceName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AccountUsername)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastHost)
                </td>
                <td>
                    @Html.Raw(Utils.GetGoogleMapsLink(item.LastLatitude ?? 0, item.LastLongitude ?? 0, html: true))
                </td>
                <td>
                    @Html.Raw(Utils.GetLastUpdatedStatus(item.LastSeen ?? 0, html: true))
                </td>
                <td>
                    <div class="dropdown">
                        <button class="btn btn-primary btn-sm dropdown-toggle" type="button" id="dropdownGroup" data-bs-toggle="dropdown" aria-expanded="false">
                            <i class="fa-solid fa-bars"></i>
                        </button>
                        <ul class="dropdown-menu" aria-labelledby="dropdownGroup">
                            <li><a class="dropdown-item" asp-action="Edit" asp-route-id="@item.Uuid"><i class="fa-solid fa-pen-to-square"></i>&nbsp;Edit</a></li>
                            <li><a class="dropdown-item" asp-action="Details" asp-route-id="@item.Uuid"><i class="fa-solid fa-circle-info"></i>&nbsp;Details</a></li>
                            <li><a class="dropdown-item" asp-action="Delete" asp-route-id="@item.Uuid"><i class="fa-solid fa-trash-can"></i>&nbsp;Delete</a></li>
                            <li><a class="dropdown-item" asp-action="ForceAccountSwitch" asp-route-id="@item.Uuid" onclick="return confirm('Are you sure you want to force device \'@item.Uuid\' to logout and switch accounts?');"><i class="fa-solid fa-repeat"></i>&nbsp;Switch Account</a></li>
                        </ul>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>

@section Scripts {
    <script>
        $(document).ready(function() {
            $('#table-devices').DataTable({
                /*
                ajax: {
                    url: '/api/devices',
                    method: 'POST',
                    dataType: 'json',
                    dataSrc: 'devices',
                },
                columns: [
                    { data: 'uuid', name: 'UUID', width: 'auto' },
                    { data: 'instance_name', name: 'Instance Name', width: 'auto' },
                    { data: 'account_username', name: 'Account Username', width: 'auto' },
                    { data: 'last_host', name: 'Last Host', width: 'auto' },
                    {
                        data: null,
                        name: 'Last Location',
                        width: 'auto',
                        render: function(data, type, row) {
                            return `${row.last_lat.toFixed(5)},${row.last_lon.toFixed(5)}`;
                        },
                    },
                    { data: 'last_seen', name: 'Last Seen', width: 'auto' },
                    {
                        data: null,
                        width: '5%',
                        render: function(data, type, row) {
                            const html = `
<div class="dropdown">
    <button class="btn btn-primary btn-sm dropdown-toggle" type="button" id="dropdownGroup" data-bs-toggle="dropdown" aria-expanded="false">
        <i class="fa-solid fa-bars"></i>
    </button>
    <ul class="dropdown-menu" aria-labelledby="dropdownGroup">
        <li>
            <a class="dropdown-item" asp-action="Edit" asp-route-id="${row.uuid}">
                <i class="fa-solid fa-pen-to-square"></i>
                &nbsp;Edit
            </a>
        </li>
        <li>
            <a class="dropdown-item" asp-action="Details" asp-route-id="${row.uuid}">
                <i class="fa-solid fa-circle-info"></i>
                &nbsp;Details
            </a>
        </li>
        <li>
            <a class="dropdown-item" asp-action="Delete" asp-route-id="${row.uuid}">
                <i class="fa-solid fa-trash-can"></i>
                &nbsp;Delete
            </a>
        </li>
        <li>
            <a class="dropdown-item" asp-action="ForceAccountSwitch" asp-route-id="${row.uuid}" onclick="return confirm('Are you sure you want to force device \\'${row.uuid}\\' to logout and switch accounts?');">
                <i class="fa-solid fa-repeat"></i>
                &nbsp;Switch Account
            </a>
        </li>
    </ul>
</div>
                            `;
                            return html;
                        },
                    },
                ],
                */
                columnDefs: [
                    { responsivePriority: 0, targets: 0 },
                    { responsivePriority: 2, targets: 1 },
                    { responsivePriority: 4, targets: 2 },
                    { responsivePriority: 100, targets: 3 },
                    { responsivePriority: 10, targets: 4 },
                    { responsivePriority: 3, targets: 5 },
                    { responsivePriority: 1, targets: -1, orderable: false },
                ],
                order: [[0, 'asc']],
                stateSave: true,
                searching: true,
                paging: true,
                lengthMenu: [[25, 50, 100, 200, 300, -1], [25, 50, 100, 200, 300, 'All']],
                pagingType: 'full_numbers',
                colReorder: {
                    enable: true,
                    fixedColumnsLeft: 1,
                },
                fixedHeader: {
                    header: true,
                },
                responsive: {
                    //breakpoints: '',
                    details: true,
                },
                info: true,
            });
        });
    </script>
}