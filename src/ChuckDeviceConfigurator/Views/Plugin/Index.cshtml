@using ChuckDeviceController.Extensions
@model PluginsViewModel
@{
    ViewData["Title"] = localizer["Plugin Manager"];
}

<h1>@ViewData["Title"]</h1>
<br />
@Html.DisplayFor(model => model, "Breadcrumbs", new { CurrentPage = ViewData["Title"] })

<ul class="nav nav-pills nav-justified mb-3" id="pills-tab" role="tablist">
    <li class="nav-item" role="presentation">
        <a class="nav-link active" id="pills-plugins-tab" data-bs-toggle="tab" data-bs-target="#plugins" href="#plugins" role="tab" aria-controls="pills-plugins" aria-selected="true">@localizer["Plugins"]</a>
    </li>
    <li class="nav-item" role="presentation">
        <a class="nav-link" id="pills-apikeys-tab" data-bs-toggle="tab" data-bs-target="#apikeys" href="#apikeys" role="tab" aria-controls="pills-apikeys" aria-selected="false">@localizer["API Keys"]</a>
    </li>
</ul>
<div class="tab-content">
    <div class="tab-pane fade show active" id="plugins" role="tabpanel" aria-labelledby="pills-plugins-tab">
        <table id="table-plugins" class="table table-striped table-bordered dt-responsive nowrap">
            <thead class="table-dark">
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Plugins[0].Plugin.Name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Plugins[0].State)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Plugins[0].Plugin.Author)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Plugins[0].ApiKey.Scope)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Plugins[0].Plugin.Version)
                    </th>
                    <th width="5%">@localizer["Action"]</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Plugins)
                {
                    var isEnabled = item.State == PluginState.Running;
                    <tr>
                        <th scope="row">
                            @Html.DisplayFor(modelItem => item.Plugin.Name)
                        </th>
                        <td>
                            @Html.Raw(Utils.GetPluginStateColor(item.State))
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Plugin.Author)
                        </td>
                        <td>
                            @Html.Raw(string.Join("<br>", item.ApiKey?.Scope ?? new()))
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Plugin.Version)
                        </td>
                        <td>
                            <div class="dropdown">
                                <button class="btn btn-primary btn-sm dropdown-toggle" type="button" id="dropdownGroup" data-bs-toggle="dropdown" aria-expanded="false">
                                    <i class="fa-solid fa-bars"></i>
                                </button>
                                <ul class="dropdown-menu" aria-labelledby="dropdownGroup">
                                    <li><a class="dropdown-item" asp-controller="Plugin" asp-action="Manage" asp-route-id="@item.Plugin.Name" asp-route-enabled="@(!isEnabled)"><i class="fa-solid @(isEnabled ? "fa-stop" : "fa-play")"></i>&nbsp; @(isEnabled ? localizer["Disable"] : localizer["Enable"])</a></li>
                                    <li><a class="dropdown-item" asp-controller="Plugin" asp-action="Reload" asp-route-id="@item.Plugin.Name"><i class="fa-solid fa-arrows-rotate"></i>&nbsp;@localizer["Reload"]</a></li>
                                    <li><a class="dropdown-item" asp-controller="Plugin" asp-action="Details" asp-route-id="@item.Plugin.Name"><i class="fa-solid fa-circle-info"></i>&nbsp;@localizer["Details"]</a></li>
                                </ul>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div class="tab-pane fade" id="apikeys" role="tabpanel" aria-labelledby="pills-apikeys-tab">
        <p class="float-end">
            <a class="btn btn-success btn-sm" asp-controller="ApiKey" asp-action="Create">@localizer["Create New"]</a>
        </p>
        <br />
        <br />
        <table id="table-apikeys" class="table table-striped table-bordered dt-responsive nowrap">
            <thead class="table-dark">
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.ApiKeys[0].Name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.ApiKeys[0].Scope)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.ApiKeys[0].ExpirationTimestamp)
                    </th>
                    <th>
                        @localizer["No. Plugins"]
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.ApiKeys[0].IsEnabled)
                    </th>
                    <th width="5%">@localizer["Action"]</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.ApiKeys)
                {
                    <tr>
                        <th scope="row">
                            @Html.DisplayFor(modelItem => item.Name)
                        </th>
                        <td>
                            @Html.Raw(string.Join("<br>", item.Scope.ToString().Split(',')))
                        </td>
                        <td>
                            @(item.ExpirationTimestamp == 0 ? @localizer["Never"] : item.ExpirationTimestamp.FromSeconds().Date.ToLocalTime().ToString("yyyy/MM/dd"))
                        </td>
                        <td>
                            @(Model.Plugins.Count(plugin => plugin.ApiKey.Id == item.Id))
                        </td>
                        <td>
                            @Html.Raw(Utils.FormatBoolean(item.IsEnabled, html: true))
                        </td>
                        <td>
                            <div class="dropdown">
                                <button class="btn btn-primary btn-sm dropdown-toggle" type="button" id="dropdownGroup" data-bs-toggle="dropdown" aria-expanded="false">
                                    <i class="fa-solid fa-bars"></i>
                                </button>
                                <ul class="dropdown-menu" aria-labelledby="dropdownGroup">
                                        <li>
                                            <button class="dropdown-item" onclick="copyToClipboard('@(item.Key)');">
                                                <i class="fa-solid fa-copy"></i>&nbsp;@localizer["Copy Key"]
                                            </button>
                                        </li>
                                    <li><a class="dropdown-item" asp-controller="ApiKey" asp-action="Details" asp-route-id="@item.Id"><i class="fa-solid fa-circle-info"></i>&nbsp;@localizer["Details"]</a></li>
                                    <li><a class="dropdown-item" asp-controller="ApiKey" asp-action="Edit" asp-route-id="@item.Id"><i class="fa-solid fa-pen-to-square"></i>&nbsp;@localizer["Edit"]</a></li>
                                    <li><a class="dropdown-item" asp-controller="ApiKey" asp-action="Delete" asp-route-id="@item.Id"><i class="fa-solid fa-trash"></i>&nbsp;@localizer["Delete"]</a></li>
                                </ul>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@section Scripts {
    <script src="/js/clipboard.js"></script>
    <script>
        $(document).ready(function() {
            // Credits: https://stackoverflow.com/a/19015027
            // Store the currently selected tab in the hash value
            $('ul.nav-pills > li > a').on('shown.bs.tab', function (e) {
                const id = $(e.target).attr('href').substr(1);
                window.location.hash = id;
            });

            // Upon page load, switch to the currently selected tab
            const hash = window.location.hash;
            $('#pills-tab a[href="' + hash + '"]').tab('show');

            $('#table-plugins').DataTable({
                columnDefs: [
                    // Name State Author Permissions Version Enabled Action
                    // 0    1     2      3           4       5       6
                    // 0    2     5      6           4       3       1
                    { responsivePriority: 0, targets: 0 },
                    { responsivePriority: 2, targets: 1 },
                    { responsivePriority: 5, targets: 2 },
                    //{ responsivePriority: 6, targets: 3, render: $.fn.dataTable.render.ellipsis(50) },
                    { responsivePriority: 6, targets: 3 },
                    { responsivePriority: 4, targets: 4 },
                    { responsivePriority: 3, targets: 5 },
                    { responsivePriority: 1, targets: -1, orderable: false },
                ],
                order: [[0, 'asc']],
                stateSave: true,
                searching: true,
                paging: true,
                lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, 'All']],
                colReorder:
                {
                    enable: true,
                    fixedColumnsLeft: 1,
                },
                fixedHeader: {
                    header: true,
                },
                responsive: true,
                info: true,
            });

            $('#table-apikeys').DataTable({
                columnDefs: [
                    { responsivePriority: 0, targets: 0 },
                    //{ responsivePriority: 2, targets: 1, render: $.fn.dataTable.render.ellipsis(15) },
                    { responsivePriority: 4, targets: 1 },
                    { responsivePriority: 3, targets: 2 },
                    { responsivePriority: 2, targets: 3 },
                    { responsivePriority: 1, targets: -1, orderable: false },
                ],
                order: [[0, 'asc']],
                stateSave: true,
                searching: true,
                paging: true,
                lengthMenu: [[10, 25, 50, -1], [10, 25, 50, 'All']],
                colReorder:
                {
                    enable: true,
                    fixedColumnsLeft: 1,
                },
                fixedHeader: {
                    header: true,
                },
                responsive: true,
                info: true,
            });
        });
    </script>
}