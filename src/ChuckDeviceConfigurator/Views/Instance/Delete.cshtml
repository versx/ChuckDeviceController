@model Instance
@{
    ViewData["Title"] = "Delete Instance " + Model.Name;
}

<h1>Delete Instance</h1>

<p>@Html.ValidationMessage("Instance", new { @class = "text-danger" })</p>

<br />
@Html.DisplayFor(model => model, "Breadcrumbs", new { Controller = "Instance", ControllerText = "Instances", CurrentPage = "Delete Instance" })

<h3>Are you sure you want to delete this instance?</h3>
<div>
    <h4>Instance '@Model?.Name'</h4>
    <div>
        <form asp-action="Delete">
            <input type="hidden" asp-for="Name" />
            <input type="submit" value="Yes" class="btn btn-danger" />
            <a asp-action="Index" class="btn btn-secondary">No</a>
        </form>
    </div>
</div>

<hr />
<dl class="row">
    <dt class = "col-sm-2">
        @Html.DisplayNameFor(model => model.Name)
    </dt>
    <dd class = "col-sm-10">
        @Html.DisplayFor(model => model.Name)
    </dd>
    <dt class = "col-sm-2">
        @Html.DisplayNameFor(model => model.Type)
    </dt>
    <dd class = "col-sm-10">
        @Html.DisplayFor(model => model.Type)
    </dd>
    <dt class = "col-sm-2">
        @Html.DisplayNameFor(model => model.Status)
    </dt>
    <dd class = "col-sm-10">
        @Html.Raw(Model?.Status)
    </dd>
    <dt class = "col-sm-2">
        Level Requirements
    </dt>
    <dd class = "col-sm-10">
        @($"{Model?.MinimumLevel}-{Model?.MaximumLevel}")
    </dd>
    <dt class = "col-sm-2">
        @Html.DisplayNameFor(model => model.Geofences)
    </dt>
    <dd class = "col-sm-10">
        @Html.Raw(string.Join("<br>", Model?.Geofences ?? new()))
    </dd>
    @if (Model?.Data?.IsEvent ?? false)
    {
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Data.AccountGroup)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Data.AccountGroup)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Data.IsEvent)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Data.IsEvent)
        </dd>
    }
    <dt class = "col-sm-2">
        Assigned Devices
    </dt>
    <dd class = "col-sm-10">
        @if ((ViewBag?.Devices?.Count ?? 0) > 0)
        {
            <ul class="list-group">
                @foreach (var device in ViewBag!.Devices)
                {
                    var status = Utils.GetDeviceStatus(device.LastSeen ?? 0);
                    <li class="list-group-item">@Html.Raw($"{status} {device.Uuid}")</li>
                }
            </ul>
        }
        else
        {
            <p>None</p>
        }
    </dd>
</dl>