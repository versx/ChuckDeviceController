@model List<Pokestop>
@{
    ViewData["Title"] = "Utilities - Clear Stale Pokestops";
}

<h1>Utilities</h1>

<p>@Html.ValidationMessage("Utilities", new { @class = "text-danger" })</p>

<h4>Clear Stale Pokestops</h4>

<p>
    Below is a list of Pokestops that have not been seen by any device in the last 24 hours.
</p>

<br />
@Html.DisplayFor(model => model, "Breadcrumbs", new { Controller = "Utilities", ControllerText = "Utilities", CurrentPage = "Clear Stale Pokestops" })

<hr />
<div class="row">
    <div class="col">
        <form asp-controller="Utilities" asp-action="ClearStalePokestops">
            <div class="pb-5">
                <input type="submit" value="Delete All" class="btn btn-danger btn-sm float-end" title="Delete All Stale Pokestops" onclick="return confirm('You are about to delete \'@(Model.Count)\' Pokestops, are you sure this is what you want to do?');" />
            </div>
            <table id="table-stale-pokestops" class="table table-striped table-bordered dt-responsive nowrap">
                <thead class="table-dark">
                    <tr>
                        <th scope="col">
                            Image
                        </th>
                        <th scope="col">
                            @Html.DisplayNameFor(model => model[0].Id)
                        </th>
                        <th scope="col">
                            @Html.DisplayNameFor(model => model[0].Name)
                        </th>
                        <th scope="col">
                            @Html.DisplayNameFor(model => model[0].Updated)
                        </th>
                        <th scope="col">
                            @Html.DisplayNameFor(model => model[0].IsEnabled)
                        </th>
                        <th scope="col">
                            @Html.DisplayNameFor(model => model[0].IsDeleted)
                        </th>
                        <th width="5%">Action</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <th scope="row">
                                <img src="@item.Url" height="48" width="48" />
                            </th>
                            <td>
                                @Html.DisplayFor(modelItem => item.Id)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Name)
                            </td>
                            <td>
                                @Html.Raw(Utils.GetLastUpdatedStatus(item.Updated, html: true))
                            </td>
                            <td>
                                @Html.Raw(Utils.FormatBoolean(item.IsEnabled, html: true)) @*Html.Raw($"<span class=\"{(item.IsEnabled ? "pokestop-enabled" : "pokestop-disabled")}\">{(item.IsEnabled ? "Yes" : "No")}</span>")*@
                            </td>
                            <td>
                                @Utils.FormatBoolean(item.IsDeleted)
                            </td>
                            <td>
                                <a class="btn btn-danger btn-sm" asp-action="DeletePokestop" asp-route-id="@item.Id" title="Delete Stale Pokestop" onclick="return confirm('You are about to delete Pokestop \'@(item.Name ?? item.Id)\', are you sure this is what you want to do?');"><i class="fa-solid fa-trash-can"></i></a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        $(document).ready(function() {
            $('#table-stale-pokestops').DataTable({
                columnDefs: [
                    // Image Id Name LastUpdated Enabled Deleted Action
                    // 0     1  2    3           4       5       6
                    // 0     5  2    10          3       4       1
                    { responsivePriority: 0, targets: 0 },
                    { responsivePriority: 5, targets: 1 },
                    { responsivePriority: 2, targets: 2, render: $.fn.dataTable.render.ellipsis(25) },
                    { responsivePriority: 10, targets: 3 },
                    { responsivePriority: 3, targets: 4 },
                    { responsivePriority: 4, targets: 5 },
                    { responsivePriority: 1, targets: -1, orderable: false },
                ],
                order: [[0, 'asc']],
                stateSave: true,
                searching: true,
                paging: true,
                lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, 'All']],
                colReorder:
                {
                    enable: true,
                    fixedColumnsLeft: 1,
                },
                fixedHeader: {
                    header: true,
                },
                responsive: true,
                info: true,
            });
        });
    </script>
}