@model Geofence
@{
    ViewData["Title"] = localizer["Edit Geofence {0}", Model.Name];
}

<h1>@localizer["Edit Geofence"]</h1>

<p>@Html.ValidationMessage("Geofence", new { @class = "text-danger" })</p>

<br />
@Html.DisplayFor(model => model, "Breadcrumbs", new { Controller = "Geofence", ControllerText = localizer["Geofences"], CurrentPage = localizer["Edit Geofence"] })

<form asp-action="Edit">
    <div class="pb-4">
        <div class="float-start">
            <h4>@localizer["Geofence '{0}'", Model.Name]</h4>
        </div>
        <div class="float-end">
            <a asp-action="Delete" asp-route-id="@Model?.Name" class="btn btn-danger btn-sm">
                <i class="fa-solid fa-trash"></i>&nbsp;@localizer["Delete"]
            </a>
            &nbsp;
            <button type="submit" class="btn btn-primary btn-sm">
                <i class="fa-solid fa-floppy-disk"></i>&nbsp;@localizer["Save"]
            </button>
        </div>
    </div>
    <hr />
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="row">
        <div class="col col-md-6 col-sm-12">
            <div class="form-floating mb-3">
                <input asp-for="Name" class="form-control" placeholder="Geofence name" readonly />
                <label asp-for="Name"></label>
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
        </div>
        <div class="col col-md-6 col-sm-12">
            <div class="form-floating mb-3">
                <select asp-for="Type" class="form-control" asp-items="Html.GetEnumSelectList<GeofenceType>()" placeholder="Geofence type">
                </select>
                <label asp-for="Type"></label>
                <span asp-validation-for="Type" class="text-danger"></span>
            </div>
        </div>
    </div>
    <div class="form-group" hidden>
        <label asp-for="Data!.Area"></label>
        <textarea asp-for="Data!.Area" class="form-control" rows="30"></textarea>
        <span asp-validation-for="Data!.Area" class="text-danger"></span>
    </div>
</form>

@await Html.PartialAsync("_GeofenceRouteGeneratorPartial", new { MapConfig = ViewData["MapConfig"], GeofenceNames = ViewData["GeofenceNames"] })

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        $('#Type').on('change', setGeofence);
        let type = "@Model?.Type";
        let area = ("@Model?.Data?.Area" || '').replace(/&#xD;/g, '').replace(/&#xA;/g, '\n'); // <- TODO: Fix
        if (type === 'Circle') {
            // Circles
            if (!(area.includes('[') && area.includes(']'))) {
                area = `[@Model?.Name]\n${area}`;
            }
            loadCircles(area);
        } else {
            // Geofences
            setReturnGeofenceType(true);
            loadGeofence(area, true);
        }
    </script>
}