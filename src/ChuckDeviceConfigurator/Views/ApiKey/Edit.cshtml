@using ChuckDeviceController.Data.Abstractions
@model ManageApiKeyViewModel
@{
    ViewData["Title"] = localizer["Edit API Key {0}", Model.Name];
    var groups = Model!.Scopes.Keys.ToList();
}

<h1>@localizer["Edit API Key"]</h1>

<p>@Html.ValidationMessage("ApiKey", new { @class = "text-danger" })</p>

<br />
@Html.DisplayFor(model => model, "Breadcrumbs", new { Controller = "Plugin", ControllerText = localizer["API Keys"], Fragment = "apikeys", CurrentPage = localizer["Edit API Key"] })

<form asp-action="Edit">
    <div class="pb-4">
        <div class="float-start">
            <h4>@localizer["API Key '{0}'", @Model.Name]</h4>
        </div>
        <div class="float-end">
            <a asp-action="Delete" asp-route-id="@Model?.Name" class="btn btn-danger btn-sm">
                <i class="fa-solid fa-trash"></i>&nbsp;@localizer["Delete"]
            </a>
            &nbsp;
            <button type="submit" class="btn btn-primary btn-sm">
                <i class="fa-solid fa-floppy-disk"></i>&nbsp;@localizer["Save"]
            </button>
        </div>
    </div>
    <hr />
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="row">
        <div class="col-sm col-lg-6">
            <div class="form-floating mb-3">
                <input asp-for="Name" class="form-control" placeholder="API key name description" readonly />
                <label asp-for="Name"></label>
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
        </div>
        <div class="col-sm col-lg-6">
            <div class="form-floating mb-3">
                <input asp-for="Expiration" class="form-control" type="date" placeholder="API key expiration date" />
                <label asp-for="Expiration"></label> <small class="text-muted"><i>@localizer["Leave empty for no expiration"]</i></small>
                <span asp-validation-for="Expiration" class="text-danger"></span>
            </div>
        </div>
    </div>
    <div class="input-group mb-3">
        <div class="form-floating" style="width: 90%;">
            <input asp-for="Key" class="form-control" readonly />
            <label asp-for="Key"></label>
            <span asp-validation-for="Key" class="text-danger"></span>
        </div>
        <button id="toggle-button" class="btn btn-outline-secondary btn-sm" onclick="toggleVisibility(); return false;" data-bs-toggle="tooltip" data-bs-placement="top" title="Toggle API key visibility">
            <i id="toggle-icon" class="fa fa-fw fa-eye-slash"></i>
        </button>
        <button class="btn btn-outline-secondary btn-sm" onclick="copyToClipboard('@(Model?.Key)'); return false;" data-bs-toggle="tooltip" data-bs-placement="top" title="Copy to clipboard">
            <i class="fa fa-fw fa-copy"></i>
        </button>
    </div>
    <div class="card">
        <div class="card-header"><b>@localizer["API Scopes"]</b></div>
        <div class="card-body">
            <ul class="list-group list-group-flush">
                @for (var i = 0; i < groups.Count; i++)
                {
                    var groupName = groups[i];
                    <li class="list-group-item border-0 py-0">
                        <label class="form-label"><b>@groupName</b></label>
                        <ul class="list-group list-group-flush">
                            @for (var j = 0; j < Model?.Scopes[groupName].Count; j++)
                            {
                                <li class="list-group-item border-0 py-0">
                                    <div class="row">
                                        <div class="col-2">
                                            <div class="form-check">
                                                <input type="hidden" asp-for="@Model.Scopes[groupName][j].Value" />
                                                <input asp-for="@Model.Scopes[groupName][j].Selected" class="form-check-input" />
                                                <label class="form-check-label" asp-for="@Model.Scopes[groupName][j].Selected">
                                                    @Model.Scopes[groupName][j].Name
                                                </label>
                                            </div>
                                        </div>
                                        <div class="col-10">
                                            <span class="mb-1 text-muted">@Model.Scopes[groupName][j].Description</span>
                                        </div>
                                    </div>
                                </li>
                            }
                        </ul>
                        <hr>
                    </li>
                }
            </ul>
        </div>
    </div>
    <br />
    <div class="form-check mb-3">
        <input asp-for="IsEnabled" class="form-check-input" />
        <label class="form-check-label" asp-for="IsEnabled">
            @localizer["Enabled"]
        </label>
    </div>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script src="/js/clipboard.js"></script>
    <script>
        function toggleVisibility() {
            const icon = document.getElementById('toggle-icon');
            icon.classList.toggle('fa-eye');
            icon.classList.toggle('fa-eye-slash');

            const input = document.getElementById('Key');
            input.type = input.type === 'password'
                ? 'text'
                : 'password';
        }
    </script>
}