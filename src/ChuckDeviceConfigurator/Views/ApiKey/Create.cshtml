@using ChuckDeviceController.Data.Abstractions
@model ManageApiKeyViewModel
@{
    ViewData["Title"] = localizer["Create API Key"];
    var groups = Model!.Scopes.Keys.ToList();
}

<h1>@ViewData["Title"]</h1>

<p>@Html.ValidationMessage("ApiKey", new { @class = "text-danger" })</p>

<br />
@Html.DisplayFor(model => model, "Breadcrumbs", new { Controller = "Plugin", ControllerText = localizer["API Keys"], Fragment = "apikeys", CurrentPage = ViewData["Title"] })

<form asp-action="Create">
    <div class="pb-4">
        <div class="float-start">
            <h4>@localizer["API Key"]</h4>
        </div>
        <div class="float-end">
            <button type="submit" class="btn btn-primary btn-sm">
                <i class="fa-solid fa-floppy-disk"></i>&nbsp;@localizer["Create"]
            </button>
        </div>
    </div>
    <hr />
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="row">
        <div class="col-sm col-lg-6">
            <div class="form-floating mb-3">
                <input asp-for="Name" class="form-control" placeholder="API key name description" />
                <label asp-for="Name"></label>
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
        </div>
        <div class="col-sm col-lg-6">
            <div class="form-floating mb-3">
                <input asp-for="Expiration" class="form-control" type="date" placeholder="API key expiration date" />
                <label asp-for="Expiration"></label> <small class="text-muted"><i>@localizer["Leave empty for no expiration"]</i></small>
                <span asp-validation-for="Expiration" class="text-danger"></span>
            </div>
        </div>
    </div>
    @Html.EditorForModel("EditApiKeyScopes", new { groups })
    <br />
    <div class="form-check mb-3">
        <input asp-for="IsEnabled" class="form-check-input" checked />
        <label class="form-check-label" asp-for="IsEnabled">
            @localizer["Enabled"]
        </label>
    </div>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}