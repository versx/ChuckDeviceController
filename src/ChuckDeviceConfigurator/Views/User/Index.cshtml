@using ChuckDeviceConfigurator.ViewModels
@model ViewModelsModel<UserRolesViewModel>
@{
    ViewData["Title"] = "User Accounts";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var defaultUserName = ViewBag.DefaultUserName ?? "root";
}
<h1>User Accounts</h1>
<br />

<p>
    <a class="btn btn-success btn-sm" asp-action="Create">Create New</a>
</p>

<table id="table-users" class="table table-striped table-bordered dt-responsive nowrap">
    <thead class="table-dark">
        <tr>
            <th>
                Username
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Items[0].Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Items[0].Roles)
            </th>
            <th width="5%">Action</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var user in Model.Items)
        {
            <tr>
                <th scope="row">@user.UserName</th>
                <td>@user.Email</td>
                <td>@string.Join(", ", user.Roles.ToList())</td>
                <td>
                    <a class="btn btn-primary btn-sm" asp-controller="User" asp-action="Manage" asp-route-userId="@user.UserId">
                        <i class="fa-solid fa-pen-to-square"></i>
                    </a>
                    @if (user.UserName != defaultUserName)
                    {
                        <a class="btn btn-danger btn-sm" asp-controller="User" asp-action="Delete" asp-route-userId="@user.UserId">
                            <i class="fa-solid fa-trash-can"></i>
                        </a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

@section Scripts {
    <script>
        $(document).ready(function() {
            $('#table-users').DataTable({
                columnDefs: [
                    { orderable: false, targets: 3 },
                ],
                order: [[0, 'asc']],
                stateSave: true,
                searching: true,
                paging: true,
                lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, 'All']],
                colReorder:
                {
                    enable: true,
                    fixedColumnsLeft: 1,
                },
                fixedHeader: {
                    header: true,
                },
                responsive: {
                    //breakpoints: '',
                    details: true,
                },
                info: true,
            });
        });
    </script>
}